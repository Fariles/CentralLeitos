/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.newtonpaiva.centralleitos.ui;

import br.com.parg.viacep.ViaCEP;
import br.com.parg.viacep.ViaCEPException;
import br.newtonpaiva.centralleitos.modelos.ConectaBanco;
import br.newtonpaiva.centralleitos.modelos.Medico;
import br.newtonpaiva.centralleitos.modelos.ModeloTabelaMedico;
import br.newtonpaiva.centralleitos.modelos.Sexo;
import java.awt.Color;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import org.eclipse.persistence.expressions.spatial.SpatialParameters;

/**
 *
 * @author IgorJ
 */
public class CadastroMedico extends javax.swing.JFrame {
    
    ConectaBanco conexao = new ConectaBanco();
    private EntityManager em;
    
    Medico m = new Medico();
    
    /**
     * Creates new form CadastroMedico1
     */
    public CadastroMedico() {
        initComponents();
        em = Persistence.createEntityManagerFactory("CentralLeitosPU").createEntityManager();
        conexao.conectar();   
        this.poupulaEspecialidade();
    }

    public void poupulaEspecialidade(){
        String sql;
        sql = "SELECT * from especialidade;";
                
        try {
            conexao.excutaSQL(sql);
            while (conexao.rs.next()) {
              txtEspecialidade.addItem(conexao.rs.getString("descricao") );
                
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao Popular a Lista de Especialidade"+e,"ERRO!",JOptionPane.ERROR_MESSAGE);
        }
     
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSexo = new javax.swing.JComboBox();
        txtEspecialidade = new javax.swing.JComboBox();
        txtEmail = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtDataNascimento = new javax.swing.JFormattedTextField();
        txtCpf = new javax.swing.JFormattedTextField();
        txtCRM = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        txtCep = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        txtRua = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaMedico = new javax.swing.JTable();
        txtUF = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Médico");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel16.setText("Dados Médico");

        jLabel1.setText("Nome:");

        jLabel6.setText("E-mail:");

        jLabel14.setText("Especialidade:");

        jLabel5.setText("Sexo:");

        jSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "MASCULINO", "FEMININO", "OUTROS" }));
        jSexo.setToolTipText("Selecionar Sexo");
        jSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSexoActionPerformed(evt);
            }
        });

        txtEspecialidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>" }));
        txtEspecialidade.setToolTipText("Selecionar Sexo");
        txtEspecialidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEspecialidadeActionPerformed(evt);
            }
        });

        txtEmail.setToolTipText("Incluir o E-mail do Médico");
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtNome.setToolTipText("Incluir o nome do Médico");

        jLabel3.setText("Telefone:");

        jLabel2.setText("CRM:");

        jLabel4.setText("CPF:");

        jLabel15.setText("Data Nascimento");

        try {
            txtDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataNascimento.setToolTipText("Informe a Data de Nascimento");

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpf.setToolTipText("Informe o CPF");

        txtCRM.setToolTipText("Informar o CRM");

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.setToolTipText("Incluir o telefone do Médico");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel7.setText("Endereço");
        jLabel7.setAlignmentY(0.1F);

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCepFocusLost(evt);
            }
        });
        txtCep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCepActionPerformed(evt);
            }
        });

        jLabel8.setText("Rua:");

        jLabel9.setText("Bairro:");

        txtBairro.setToolTipText("Informe o Bairro");

        txtRua.setToolTipText("Informe a Rua");

        jLabel12.setText("Estado:");

        jLabel17.setText("Cidade:");

        txtCidade.setToolTipText("Informe o Número");

        jLabel10.setText("N°:");

        txtNumero.setToolTipText("Informe o Número");

        jLabel13.setText("Comp.:");

        txtComplemento.setToolTipText("Campo Opcional");

        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("Buscar\nCampos:  Nome");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.setToolTipText("Salvar Cadastro");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.setToolTipText("Limpar Tela");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        tabelaMedico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaMedico.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaMedicoAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tabelaMedico);

        txtUF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        jLabel11.setText("CEP:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(7, 7, 7)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtComplemento, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                    .addComponent(txtBairro))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUF, 0, 127, Short.MAX_VALUE)
                                    .addComponent(txtNumero)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(219, 219, 219)
                                        .addComponent(jLabel17)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(96, 96, 96))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(321, 321, 321)
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNome)
                            .addComponent(txtEmail)
                            .addComponent(txtEspecialidade, 0, 220, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCpf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCRM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTelefone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(92, 92, 92))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCRM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel14)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(btnSalvar)
                    .addComponent(btnLimpar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(910, 910, 910))
        );

        setSize(new java.awt.Dimension(792, 680));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        btnBuscar.doClick();
    }//GEN-LAST:event_formWindowOpened

    private void tabelaMedicoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaMedicoAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaMedicoAncestorAdded

    private void txtEspecialidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEspecialidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEspecialidadeActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        //     ModeloTabelaMedico mtm = new ModeloTabelaMedico(tabelaMedico, coluna)

        if(!txtNome.getText().equals("")){
            preencherTabela("select nome, cpf, crm, email, telefone FROM medico where nome like '%"+ txtNome.getText() +"%' order by nome;" );
        }else if(!txtTelefone.getText().equals("(  )     -    ")){
            preencherTabela("select nome, cpf, crm, email, telefone FROM medico where telefone ="+ m.getTelefone() +" order by nome;" );
        }else if(!txtCpf.getText().equals("   .   .   -  ")){
            preencherTabela("select nome, cpf, crm, email, telefone FROM medico where cpf ="+ m.getCpf() +" order by nome;" );
        } else
        preencherTabela("select nome, cpf, crm, email, telefone FROM medico ORDER BY id desc LIMIT 8;");
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSexoActionPerformed

    }//GEN-LAST:event_jSexoActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:

        //Voltando o texto e a caixa do texto ao normal
        txtNome.setBackground(Color.WHITE);
        txtNome.setForeground(Color.black);
        txtTelefone.setBackground(Color.WHITE);
        txtTelefone.setForeground(Color.black);
        txtCRM.setBackground(Color.WHITE);
        txtCRM.setForeground(Color.black);
        txtCpf.setBackground(Color.WHITE);
        txtCpf.setForeground(Color.black);
        txtDataNascimento.setBackground(Color.WHITE);
        txtDataNascimento.setForeground(Color.black);
        txtEmail.setBackground(Color.WHITE);
        txtEmail.setForeground(Color.black);

        txtNome.setText("");
        txtCpf.setText("");
        txtTelefone.setText("");
        txtRua.setText("");
        txtBairro.setText("");
        txtCep.setText("");
        txtUF.setSelectedIndex(0);
        txtUF.setEnabled(true);
        txtComplemento.setText("");
        txtEmail.setText("");
        jSexo.setSelectedIndex(0);
        txtEspecialidade.setSelectedIndex(0);
        txtDataNascimento.setText("");
        txtCRM.setText("");
        txtCidade.setText("");
        txtNumero.setText("");
        
        
        txtNome.requestFocus();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:

        if(txtNome.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "O Nome do Médico é obrigatório","AVISO!",JOptionPane.WARNING_MESSAGE);
            txtNome.setBackground(Color.red);
            txtNome.requestFocus();
            txtNome.setForeground(Color.WHITE);
            return;
        }

        if(txtTelefone.getText().equals("(  )     -    ")){
            JOptionPane.showMessageDialog(null, "O Telefone é obrigatório ","AVISO!",JOptionPane.WARNING_MESSAGE);
            txtTelefone.setBackground(Color.red);
            txtTelefone.requestFocus();
            txtTelefone.setForeground(Color.WHITE);
            return;
        }
        if(txtEmail.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "O E-mail é obrigatório ","AVISO!",JOptionPane.WARNING_MESSAGE);
            txtEmail.setBackground(Color.red);
            txtEmail.requestFocus();
            txtEmail.setForeground(Color.WHITE);
            return;
        }
        if (txtCRM.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "O CRM é obrigatório","AVISO!",JOptionPane.WARNING_MESSAGE);
            txtCRM.setBackground(Color.red);
            txtCRM.requestFocus();
            txtCRM.setForeground(Color.WHITE);
            return;
        }
        if (txtCpf.getText().equals("   .   .   -  ")){
            JOptionPane.showMessageDialog(null, "O CPF é obrigatório","AVISO!",JOptionPane.WARNING_MESSAGE);
            txtCpf.setBackground(Color.red);
            txtCpf.requestFocus();
            txtCpf.setForeground(Color.WHITE);
            return;
        }

        String [] tst = txtDataNascimento.getText().split("/");
        Integer dia=null;
        Integer mes=null;
        Integer ano=null;

        for (int i = 0; i < tst.length; i++) {
            dia = Integer.parseInt(tst[0]);
            mes = Integer.parseInt(tst[1]);
            ano = Integer.parseInt(tst[2]);

        }//JOptionPane.showMessageDialog(null, dia + " " + mes +" " + " " + ano);

        if (ano <= 1900 || ano > 2019){
            JOptionPane.showMessageDialog(null, "Ano Inválido","AVISO!",JOptionPane.WARNING_MESSAGE);
            txtDataNascimento.setBackground(Color.red);
            txtDataNascimento.requestFocus();
            txtDataNascimento.setForeground(Color.WHITE);
            return;
        }

        if(mes < 1 || mes >12){
            JOptionPane.showMessageDialog(null, "Mês Inválido","AVISO!",JOptionPane.WARNING_MESSAGE);
            txtDataNascimento.setBackground(Color.red);
            txtDataNascimento.requestFocus();
            txtDataNascimento.setForeground(Color.WHITE);
            return;
        }

        if( mes == 1 || mes == 3 || mes == 5 || mes == 7 ||mes == 8 || mes == 10 || mes == 12){
            if(dia < 1 || dia > 31){
                JOptionPane.showMessageDialog(null, "Dia Inválido","AVISO!",JOptionPane.WARNING_MESSAGE);
                txtDataNascimento.setBackground(Color.red);
                txtDataNascimento.requestFocus();
                txtDataNascimento.setForeground(Color.WHITE);
                return;
            }
        }else if(mes ==2){
            if(dia < 1 || dia > 28){
                JOptionPane.showMessageDialog(null, "Dia Inválido","AVISO!",JOptionPane.WARNING_MESSAGE);
                txtDataNascimento.setBackground(Color.red);
                txtDataNascimento.requestFocus();
                txtDataNascimento.setForeground(Color.WHITE);
                return;
            }
        }else if(mes == 4 || mes == 6 || mes == 9 || mes == 11){
            if(dia < 1 || dia > 30){
                JOptionPane.showMessageDialog(null, "Dia Inválido","AVISO!",JOptionPane.WARNING_MESSAGE);
                txtDataNascimento.setBackground(Color.red);
                txtDataNascimento.requestFocus();
                txtDataNascimento.setForeground(Color.WHITE);
                return;
            }
        }
        if(txtEmail.getText().isEmpty()){
            txtEmail.setText("null");
        }

        //Abrir conexão com BD
        em = null;
        em = Persistence.createEntityManagerFactory("CentralLeitosPU").createEntityManager();
        em.getTransaction().begin();

        m.setNome(txtNome.getText());
        m.setCrm(txtCRM.getText());
        m.setCpf(txtCpf.getText());
        m.setTelefone(txtTelefone.getText());
        m.setEmail(txtEmail.getText());

        if(txtEspecialidade.getSelectedIndex() == 0)
        m.setEspecialidade(null);
        else
        m.setEspecialidade((String) txtEspecialidade.getSelectedItem());

        if(txtDataNascimento.getText().equals("  /  /    "))
        m.setDataNascimento(null);
        else
        m.setDataNascimento(txtDataNascimento.getText());

        if(jSexo.getSelectedIndex()==0){
            m.setSexo(null);
        }else{
            if(jSexo.getSelectedItem().equals("MASCULINO")){
                m.setSexo(Sexo.MASCULINO);
            }else if(jSexo.getSelectedItem().equals("FEMININO")){
                m.setSexo(Sexo.FEMININO);
            }else
            m.setSexo(Sexo.OUTROS);
        }
        
        if(txtNumero.getText().trim().isEmpty())
        m.setNumero(null);
        else
        m.setNumero(Integer.parseInt(txtNumero.getText()));

        if(txtRua.getText().trim().isEmpty())
        m.setNomeRua(null);
        else
        m.setNomeRua(txtRua.getText());

        if(txtCep.getText().trim().isEmpty())
        m.setCep(null);
        else
        m.setCep(txtCep.getText());

        if(txtBairro.getText().trim().isEmpty())
        m.setBairro(null);
        else
        m.setBairro(txtBairro.getText());

        if(txtUF.getSelectedIndex() == 0)
        m.setEstado(null);
        else
        m.setEstado(txtUF.getSelectedItem().toString());

        if(txtComplemento.getText().trim().isEmpty())
        m.setComplemento(null);
        else
        m.setComplemento(txtComplemento.getText());

        if(txtCidade.getText().trim().isEmpty()){
            m.setCidade(null);
        }else
        m.setCidade(txtCidade.getText());


        em.persist(m);
        em.getTransaction().commit();
        em.close();

        JOptionPane.showMessageDialog(this, "Medico registrado com sucesso");
        btnLimpar.doClick();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtCepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCepFocusLost
        // TODO add your handling code here:
        ViaCEP viaCep = new ViaCEP();

        String cp = txtCep.getText().replace("-","");

        try {
            viaCep.buscar(cp);
            txtRua.setText(viaCep.getLogradouro());
            txtBairro.setText(viaCep.getBairro());
            txtCidade.setText(viaCep.getLocalidade());
           // txtUF.setText(viaCep.getUf());
            
            switch(viaCep.getUf()){
                case "AC":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(1);
                    break;
                case "AL":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(2);
                    break;
                case "AP":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(3);
                    break;
                case "AM":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(4);
                    break;
                case "BA":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(5);
                    break;
                case "CE":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(6);
                    break;
                case "DF":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(7);
                    break;
                case "ES":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(8);
                    break;
                case "GO":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(9);
                    break;
                case "MA":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(10);
                    break;
                case "MT":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(11);
                    break;
                case "MS":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(12);
                    break;
                case "MG":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(13);
                    break;
                case "PA":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(14);
                    break;
                case "PB":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(15);
                    break;
                case "PR":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(16);
                    break;
                case "PE":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(17);
                    break;
                case "PI":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(18);
                    break;
                case "RJ":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(19);
                    break;
                case "RN":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(20);
                    break;
                case "RS":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(21);
                    break;
                case "RO":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(22);
                    break;
                case "RR":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(23);
                    break;
                case "SC":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(24);
                    break;
                case "SP":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(25);
                    break;
                case "SE":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(26);
                    break;
                case "TO":
                    txtUF.setEnabled(false);
                    txtRua.setEditable(false);
                    txtBairro.setEditable(false);
                    txtCidade.setEditable(false);
                    txtUF.setSelectedIndex(27);
                    break;
                default:
                    txtUF.setEnabled(true);
                    txtUF.setSelectedIndex(0);
            }
            
        } catch (ViaCEPException ex) {
            JOptionPane.showMessageDialog(null, "Falha ao Buscar o CEP, preencha manualmente","AVISO!",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtCepFocusLost

    private void txtCepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCepActionPerformed
/*
    */  
    public void preencherTabela(String SQL){
       ArrayList dados = new ArrayList();
       
       String [] Colunas = new String[] {"Nome", "CPF", "CRM","E-mail","Telefone"};
       
        try {
            conexao.excutaSQL(SQL);
            conexao.rs.first();
            
            do{
                dados.add(new Object[]
                    {conexao.rs.getString("nome"),
                     conexao.rs.getString("cpf"),
                     conexao.rs.getString("crm"),
                     conexao.rs.getString("email"),
                     conexao.rs.getString("telefone")});
            }while(conexao.rs.next());
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Nenhum cadastro Localizado!");
        }
       
        ModeloTabelaMedico modelo = new ModeloTabelaMedico(dados, Colunas);
        
        tabelaMedico.setModel(modelo);
        tabelaMedico.getColumnModel().getColumn(0).setPreferredWidth(200);
        tabelaMedico.getColumnModel().getColumn(0).setResizable(false);
        tabelaMedico.getColumnModel().getColumn(1).setPreferredWidth(120);
        tabelaMedico.getColumnModel().getColumn(1).setResizable(false);       
        tabelaMedico.getColumnModel().getColumn(2).setPreferredWidth(120);
        tabelaMedico.getColumnModel().getColumn(2).setResizable(false); 
        tabelaMedico.getColumnModel().getColumn(3).setPreferredWidth(200);
        tabelaMedico.getColumnModel().getColumn(3).setResizable(false); 
        tabelaMedico.getColumnModel().getColumn(4).setPreferredWidth(120);
        tabelaMedico.getColumnModel().getColumn(4).setResizable(false); 
        tabelaMedico.getTableHeader().setReorderingAllowed(false);
        tabelaMedico.setAutoResizeMode(tabelaMedico.AUTO_RESIZE_OFF);
        
       tabelaMedico.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); 
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                   // javax.swing.UIManager.setLookAndFeel(info.getClassName());
                   UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox jSexo;
    private javax.swing.JTable tabelaMedico;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCRM;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JFormattedTextField txtDataNascimento;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JComboBox txtEspecialidade;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtRua;
    private javax.swing.JFormattedTextField txtTelefone;
    private javax.swing.JComboBox txtUF;
    // End of variables declaration//GEN-END:variables
}
